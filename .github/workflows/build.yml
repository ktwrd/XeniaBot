name: .NET Core Desktop

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]
        projectName: [XeniaBot.Core, XeniaBot.WebPanel]
        platform: [windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    env:
      Solution_Name: XeniaBot
      Target_Configuration: ${{ matrix.configuration }}
      Target_Project: ${{ matrix.projectName }}
      Dotnet_Runtime_Name: "${{ matrix.platform == 'windows-latest' && 'linux-x64' || 'win-x64' }}"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - run: dotnet tool install -g dotnet-t4

    - name: Clean
      shell: powershell
      run: dotnet clean ./XeniaBot.sln --configuration $env:Target_Configuration && dotnet nuget locals all --clear

    - name: Publish Windows
      shell: powershell
      run: |
        dotnet publish $env:Target_Project --self-contained true -c $env:Target_Configuration --runtime $env:Dotnet_Runtime_Name
        Compress-Archive -Path ./${{ matrix.projectName }}/bin/${{ matrix.configuration }}/net8.0/$env:Dotnet_Runtime_Name/publish/* -Destination ${{ matrix.projectName }}.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.projectName }} (${{ matrix.configuration }}, ${{ matrix.platform }})
        path: |
          ./${{ matrix.projectName }}.zip

