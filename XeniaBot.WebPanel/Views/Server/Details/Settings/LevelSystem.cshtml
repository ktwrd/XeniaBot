@using XeniaBot.Data.Models
@model ServerDetailsViewModel

<!DOCTYPE html>

<div class="row d-flex flex-row">
    <div class="m-1 col-auto">
        <div class="card">
            <div class="card-header card-header-sm">
                General Settings
            </div>
            <div class="card-body">
                <form enctype="application/x-www-form-urlencoded" method="post" asp-controller="Server" asp-action="SaveSettings_Xp" asp-route-id="@Model.Guild.Id">
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" value="true" id="xp_settings_enable" name="enable" checked="@Model.XpConfig.Enable" />
                        <label class="form-check-label" for="xp_settings_enable">
                            Enable
                        </label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" value="true" id="xp_settings_show" name="show" checked="@Model.XpConfig.ShowLeveUpMessage"/>
                        <label class="form-check-label" for="xp_settings_show">
                            Show Level Up Message
                        </label>
                    </div>
                    @await Component.InvokeAsync("ChannelSelect", new ChannelSelectModel()
                           {
                               Channels = StrippedChannel.FromGuild(@Model.Guild),
                               Categories = StrippedCategory.FromGuild(@Model.Guild),
                               SelectedChannelId = @Model.XpConfig.LevelUpChannel,
                               Name = "channelId",
                               Id = "xp_settings_channel",
                               DisplayName = "Notification Channel"
                           })
                    <input class="btn btn-success" type="submit" value="Save"/>
                </form>
            </div>
        </div>
    </div>
    <div class="m-1 col-auto">
        <div class="card">
            <div class="card-header card-header-sm">
                Role Rewards
            </div>
            <div class="card-body">
                <div class="channel-multiselect-group">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Role Name</th>
                            <th>Required Level</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in @Model.XpConfig.RoleGrant)
                        {
                            <tr>
                                <td alt="@item.RoleId">@(Model.Guild.GetRole(item.RoleId)?.Name ?? $"null ({item.RoleId})")</td>
                                <td>@item.RequiredLevel</td>
                                <td>
                                    <form enctype="application/x-www-form-urlencoded"
                                          method="post"
                                          asp-controller="Server"
                                          asp-action="SaveSettings_Xp_RoleGrant_Remove"
                                          asp-route-id="@Model.Guild.Id">
                                        <input type="text" name="roleId" value="@item.RoleId" class="display-none" />
                                        <button class="btn btn-danger btn-sm" type="submit">
                                            Delete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    <hr/>
                    <form  enctype="application/x-www-form-urlencoded" method="post" asp-controller="Server" asp-action="SaveSettings_Xp_RoleGrant_Add" asp-route-id="@Model.Guild.Id">
                        @await Component.InvokeAsync("RoleSelect", new RoleSelectComponentModel()
                        {
                            Roles = StrippedRole.FromGuild(@Model.Client, @Model.Guild),
                            SelectedRoleId = null,
                            Id="xp_settings_rolegrant_add_roleId",
                            DisplayName = "Add Role",
                            Name = "roleId",
                            Required = true,
                            InputGroup = false
                        })
                        @await Component.InvokeAsync("Input", new InputComponentModel()
                        {
                            Type = "text",
                            Id = "xp_settings_rolegrant_requiredLevel",
                            DisplayName = "Required Level",
                            Name = "requiredLevel",
                            Required = true,
                            InputGroup = false,
                            Value = ""
                        })
                        <button type="submit" class="btn btn-success">Add</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>