@model XeniaBot.WebPanel.Models.Component.FunView.IServerLevelSystemComponentViewModel

@await Component.InvokeAsync("Alert", AlertComponentViewModel.FromExisting(Model, true))

<div class="channel-multiselect-group">
    <table class="table">
        <thead>
        <tr>
            <th>Role Name</th>
            <th>Required Level</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in @Model.LevelSystemConfig.RoleGrant)
        {
            <tr>
                <td alt="@item.RoleId">@(Model.Guild.GetRole(item.RoleId)?.Name ?? $"null ({item.RoleId})")</td>
                <td>@item.RequiredLevel</td>
                <td>
                    <form 
                        hx-post="/Server/@Model.Guild.Id/Settings/LevelSystem/Reward/Remove/Component"
                        hx-swap="innerHTML"
                        hx-target="#level-reward-content"
                        hx-indicator="#level-reward-content button.btn-danger[data-id=_@item.RoleId] .htmx-indicator">
                        <input type="text" name="roleId" value="@item.RoleId" class="display-none" />
                        <button class="btn btn-danger btn-sm" type="submit" data-id="_@item.RoleId">
                            <span class="spinner-border htmx-indicator spinner-border-sm" role="status" aria-hidden="true"></span>
                            Delete
                        </button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <hr/>
    <form  
        hx-post="/Server/@Model.Guild.Id/Settings/LevelSystem/Reward/Add/Component"
        hx-swap="innerHTML"
        hx-target="#level-reward-content"
        hx-indicator="#level-reward-content button.btn-success .htmx-indicator">
        @await Component.InvokeAsync("RoleSelect", new RoleSelectComponentModel()
        {
            Roles = StrippedRole.FromGuild(@Model.Client, @Model.Guild),
            SelectedRoleId = null,
            Id="xp_settings_rolegrant_add_roleId",
            DisplayName = "Add Role",
            Name = "roleId",
            Required = true,
            InputGroup = false
        })
        @await Component.InvokeAsync("Input", new InputComponentModel()
        {
            Type = "text",
            Id = "xp_settings_rolegrant_requiredLevel",
            DisplayName = "Required Level",
            Name = "requiredLevel",
            Required = true,
            InputGroup = false,
            Value = ""
        })
        <button type="submit" class="btn btn-success">
            <span class="spinner-border htmx-indicator spinner-border-sm" role="status" aria-hidden="true"></span>
            Add
        </button>
    </form>
</div>